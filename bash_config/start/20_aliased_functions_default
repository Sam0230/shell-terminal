# aliases

# alias npm="npx npm"
# alias sbrew="/opt/homebrew/sbrew"
# export _bare_proxy_0=127.0.0.1:45678
# export _bare_proxy_0_t=http
# alias setproxy="export http_proxy=$_bare_proxy_0_t://$_bare_proxy_0; export https_proxy=$_bare_proxy_0_t://$_bare_proxy_0; export ftp_proxy=$_bare_proxy_0_t://$_bare_proxy_0; export telnet_proxy=$_bare_proxy_0_t://$_bare_proxy_0; export all_proxy=$_bare_proxy_0_t://$_bare_proxy_0; export HTTP_PROXY=$_bare_proxy_0_t://$_bare_proxy_0; export HTTPS_PROXY=$_bare_proxy_0_t://$_bare_proxy_0; export FTP_PROXY=$_bare_proxy_0_t://$_bare_proxy_0; export TELNET_PROXY=$_bare_proxy_0_t://$_bare_proxy_0; export ALL_PROXY=$_bare_proxy_0_t://$_bare_proxy_0; export _bare_proxy=$_bare_proxy_0"
# alias usetproxy="unset http_proxy; unset https_proxy; unset ftp_proxy; unset telnet_proxy; unset all_proxy; unset HTTP_PROXY; unset HTTPS_PROXY; unset FTP_PROXY; unset TELNET_PROXY; unset ALL_PROXY; unset _bare_proxyAAA"
# alias aria2cf='aria2c --dht-file-path=$HOME/.aria2/dht.dat -x 8 -s 256 -k 1M --file-allocation=falloc'
# alias aria2cd='aria2c --dht-file-path=$HOME/.aria2/dht.dat --conf-path=/Users/sam0230/.aria2/aria2cd.conf'
# alias aria2c='aria2c --dht-file-path=$HOME/.aria2/dht.dat --file-allocation=falloc'
# alias aria2ci='aria2c --dht-file-path=$HOME/.aria2/dht.dat -x 1024 -s 8192 -k 1M --file-allocation=falloc'
# alias kcptun_client='~/Documents/kcptun_client'
# alias zip2john="~/Documents/john-1.8.0.9-jumbo-macosx_sse4/run/zip2john"
# alias rar2john="~/Documents/john-1.8.0.9-jumbo-macosx_sse4/run/rar2john"
# alias john="~/Documents/john-1.8.0.9-jumbo-macosx_sse4/run/john"
# alias linux="docker exec -it ArchLinux su sam0230"
# alias startlinux="~/Documents/docker-linux/startlinux"
# alias linux="~/Documents/docker-linux/linux"
# alias pkg-uninstall="bash ~/Documents/pkg-uninstall.sh"
# alias vscode="open -a 'Visual Studio Code'"
# alias vscode="open -a 'Visual Studio Code'"
# alias quarantine="codesign --verify --verbose --all-architectures --deep --"
# quarantine() {
# 	for i in "$@"; do
# 		codesign --verify --verbose --all-architectures --deep -- "$i"
# 		echo
# 		codesign --display --verbose --all-architectures --deep -- "$i"
# 		echo -e '\n'
# 	done
# }
# alias cp="/bin/cp -c"
# alias sclear="echo -ne '\033c\033[3J'"
# alias nclear="/opt/homebrew/opt/ncurses/bin/clear"
# alias subtitleedit='WINEPREFIX=${HOME}/.wine wine64 "$HOME/Documents/SE361/SubtitleEdit.exe"'
# trust() {
# 	local recursively=0
# 	local args=("$@")
# 	for i in $(eval "echo {0..$[${#args[@]}-1]}"); do
# 		if [ "${args[$i]}" == "-r" ]; then
# 			recursively=1
# 			unset args[$i]
# 		fi
# 	done
# 	if [ "$recursively" == "1" ]; then
# 		xattr -r -d com.apple.quarantine "${args[@]}"
# 	else
# 		xattr -d com.apple.quarantine "${args[@]}"
# 	fi
# }
# alias aria2c1='aria2c -x 64 -s 256 -k 512k --piece-length=64k "$@"'
# resetPerm() {
# 	sudo /bin/chmod -R -N "$@"
# 	sudo /usr/sbin/chown -h -R sam0230:sam0230 "$@"
# 	sudo /bin/chmod -R u+r,u+w,go= "$@"
# 	sudo find "$@" -type d -exec /bin/chmod -h u+x \{\} \;
# 	sudo find "$@" -type l -exec /bin/chmod -h u+r,u+w,go= \{\} \;
# }
# resetPATH() {
# 	PATH="/usr/bin:/bin:/usr/sbin:/sbin:/Library/Apple/usr/bin"
# }
# resetEnv() {
# 	PATH="/usr/bin:/bin:/usr/sbin:/sbin:/Library/Apple/usr/bin:/opt/other/bin:/opt/homebrew/bin"
# 	unset PKG_CONFIG_PATH MANPATH CXXFLAGS LDFLAGS CPPFLAGS INFOPATH CFLAGS
# }
# lnxsh() {
# 	if tcping -qu 150000 192.168.247.164 222; then
# 		ssh -p 222 sam0230@192.168.247.164 "$@"
# 	elif tcping -qu 150000 192.168.2.253 222; then
# 		ssh -p 222 sam0230@192.168.2.253 "$@"
# 	elif tcping -qu 500000 192.168.247.164 222; then
# 		ssh -p 222 sam0230@192.168.247.164 "$@"
# 	elif tcping -qu 500000 192.168.2.253 222; then
# 		ssh -p 222 sam0230@192.168.2.253 "$@"
# 	else
# 		echo "Cannot connect."
# 	fi
# }
# lnxpull() {
# 	__OLDIFS_bn22s__="$IFS"
# 	IFS=$'\n'
# 	if tcping -qu 80000 192.168.247.164 222; then
# 		filelist=($(printf "sam0230@192.168.247.164%s\n" "${@: 1:$#-1}"))
# 	elif tcping -qu 150000 192.168.2.253 222; then
# 		filelist=($(printf "sam0230@192.168.2.253%s\n" "${@: 1:$#-1}"))
# 	elif tcping -qu 500000 192.168.247.164 222; then
# 		filelist=($(printf "sam0230@192.168.247.164%s\n" "${@: 1:$#-1}"))
# 	elif tcping -qu 500000 192.168.2.253 222; then
# 		filelist=($(printf "sam0230@192.168.2.253%s\n" "${@: 1:$#-1}"))
# 	else
# 		echo "Cannot connect."
# 		return
# 	fi
# 	IFS="$__OLDIFS_bn22s__"
# 	unset "$__OLDIFS_bn22s__"
# 	scp -r -P 222 "${filelist[@]}" "${@: -1}"
# }
# lnxpush() {
# 	if tcping -qu 80000 192.168.247.164 222; then
# 		target="sam0230@192.168.247.164"
# 	elif tcping -qu 150000 192.168.2.253 222; then
# 		target="sam0230@192.168.2.253"
# 	elif tcping -qu 500000 192.168.247.164 222; then
# 		target="sam0230@192.168.247.164"
# 	elif tcping -qu 500000 192.168.2.253 222; then
# 		target="sam0230@192.168.2.253"
# 	else
# 		echo "Cannot connect."
# 		return
# 	fi
# 	scp -r -P 222 "${@: 1:$#-1}" "$target${@: -1}"
# }
# exeof() {
# 	lsof -p $1 | grep -Em 1 "$(id -nru)"'[ \t]+txt[ \t]+REG[ \t]' | sed -E 's/^([^ \t]+[ \t]+){8}//'
# }
